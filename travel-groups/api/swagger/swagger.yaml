swagger: "2.0"
info:
  version: "0.0.1"
  title: Travel Groups App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /plan:
    x-swagger-router-controller: travel_groups
    post: 
      summary: Create a plan
      description: Create a new plan of a user
      operationId: addPlan
      parameters:
        - name: Plan
          in: body
          description: Plan to add 
          required: true
          schema: 
            $ref: "#/definitions/NewPlan"
      responses: 
        200: 
          description: ok
          schema: 
            $ref: "#/definitions/Plan"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: travel_groups
    post:
      summary: creates User
      description: Creates a new user of Travel Groups
      operationId: createUser
      parameters:
        - name: User
          in: body
          description: The user information
          schema:
            $ref: "#/definitions/NewUser"
      responses:
        200:
          description: User information is OK
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  /user/{id}/plan:
    x-swagger-router-controller: travel_groups
    get: 
      summary: get plan by the user ID
      description: return the plan information of the user
      operationId: getPlanByID
      parameters: 
        - name: id 
          in: path
          description: ID of the user
          required: true
          type: string
      responses: 
        200: 
          description: ok
          schema: 
            $ref: "#/definitions/Plan"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
    post: 
      summary: update the plan
      description: update the plan the user creates
      operationId: updatePlanByID
      parameters: 
        - name: id
          in: path
          description: ID of the user
          required: true
          type: string
        - name: depature
          in: formData
          description: Depature Time
          required: false
          type: string
        - name: destination
          in: formData
          description: Destination of the plan
          required: false
          type: string
        - name: origin
          in: formData
          description: Origin of the plan
          type: string
        - name: group_member
          in: formData
          description: member to add
          type: string
        - name: transportations
          in: formData
          description: transportation to add
          type: string 
      responses: 
        200: 
          description: ok
          schema: 
            $ref: "#/definitions/Plan"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    x-swagger-router-controller: travel_groups
    get:
      summary: gets user by ID
      description: retrieves the user specified by the ID parameter
      operationId: getUserByID
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: string
      responses:
        200:
          description: target user found
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      summary: for updating user information
      description: used for updating an existing user's information
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: id of user to be updated
          required: true
          type: string
        - name: new_info
          in: body
          description: new user information
          schema:
            $ref: '#/definitions/UpdateUser'
      responses:
        200:
          description: update successful
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    
      
# complex objects have schema definitions
definitions:
  Transportation:
    properties:
      id: 
        type: string
      which_method:
        type: string
      arrival:
        type: string
      intr_places:
        type: string
        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
    required:
      - id
    properties:
      id:
        type: string
      plan_id:
        type: string
      friends:
        type: array
        items:
            type: string
  NewUser:
    required:
      - name
      - password
    properties:
      name:
        type: string
      password: 
        type: string
        
  UpdateUser:
    properties:
      name:
        type: string
      plan_id:
        type: string
      password:
        type: string
        
  Plan: 
    allOf:
      - $ref: "#/definitions/NewPlan"
    required:
        - id
    properties:
        id: 
          type: string
        group_member:
          type: array
          items: 
            type: string
        transportations: 
          type: array
          items: 
            type: string
  NewPlan: 
    required:
      - creater
    properties:
      creater:
        type: string
      origin:
        type: string
      destination:
        type: string
      depature: 
        type: string
